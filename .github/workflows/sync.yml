name: Sync fork and release

on:
  workflow_dispatch:
    secrets:
      GH_PAT:
        required: true

permissions:
  contents: read
  actions: write

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          fetch: 0

      - name: Setup upstream
        run: |
          parent_owner=$(gh repo view $GITHUB_REPOSITORY --json parent --jq '.parent.owner.login')
          parent_name=$(gh repo view $GITHUB_REPOSITORY --json parent --jq '.parent.name')
          parent_repo="https://github.com/${parent_owner}/${parent_name}.git"
          echo "${parent_repo}"
          git remote add upstream "${parent_repo}"
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Rebase the fault branch
        run: |
          git config --global user.email "core@opentofu.org"
          git config --global user.name "OpenTofu Core Development Team"

          default_branch=$(git symbolic-ref --short HEAD)
          git pull --rebase upstream "$default_branch"
          git push origin "$default_branch" --force

      - name: Fetch tags from upstream
        run: |
          git fetch --tags --force upstream
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Push tags to origin
        run: |
          git push --tags origin

  release:
    runs-on: ubuntu-latest
    needs: ["sync"]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          fetch: 0
          token: ${{ secrets.GH_PAT }}

      - name: Check Tags for Releases
        run: |
          tags=$(git ls-remote --tags --refs | cut -f2 | sed 's/refs\/tags\///')
          releases=$(gh release list --exclude-drafts --limit 1000 -R $GITHUB_REPOSITORY)

          for tag in $tags; do
            if [[ $tag =~ ^v[0-9]+ ]]; then
              if ! grep -q "$tag" <<< "$releases"; then
                echo "No release found for tag, will attempt to release: $tag"
                gh workflow run artifact-release.yml -f tag="$tag" -R $GITHUB_REPOSITORY
              else
                echo "Release found for tag: $tag"
              fi
            fi
          done
        env:
          GH_TOKEN: ${{ github.token }}
